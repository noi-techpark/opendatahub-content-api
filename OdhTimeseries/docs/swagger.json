{
    "produces": [
        "application/json"
    ],
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "A Go REST API server for managing timeseries data using Gin framework and PostgreSQL with a simplified, performance-optimized schema.",
        "title": "Timeseries API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/datasets": {
            "post": {
                "description": "Create a new dataset with optional measurement type associations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasets"
                ],
                "summary": "Create new dataset",
                "parameters": [
                    {
                        "description": "Create dataset request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateDatasetRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Dataset created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.DatasetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/datasets/{id}": {
            "get": {
                "description": "Retrieve dataset details with all associated measurement types",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasets"
                ],
                "summary": "Get dataset details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dataset ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dataset details with types",
                        "schema": {
                            "$ref": "#/definitions/models.DatasetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Dataset not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/datasets/{id}/sensors": {
            "get": {
                "description": "Retrieve all sensors that have timeseries associated with a specific dataset",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasets"
                ],
                "summary": "Get all sensors that have timeseries in dataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dataset ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sensors in the dataset",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Dataset not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/datasets/{id}/types": {
            "post": {
                "description": "Add measurement types to an existing dataset with required/optional flag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasets"
                ],
                "summary": "Add measurement types to dataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dataset ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Add types request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddTypesToDatasetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Types added successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Dataset not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove measurement types from an existing dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasets"
                ],
                "summary": "Remove measurement types from dataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dataset ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of type names to remove",
                        "name": "type_names",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Types removed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Dataset not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check the health status of the API",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "API is healthy",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/measurements": {
            "delete": {
                "description": "Delete measurements based on sensor names, type names, and time range filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "measurements"
                ],
                "summary": "Delete measurements by filters",
                "parameters": [
                    {
                        "description": "Delete measurements request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeleteMeasurementsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Measurements deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/measurements/batch": {
            "post": {
                "description": "Insert multiple measurements in batch for optimal performance with configurable batch sizes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "measurements"
                ],
                "summary": "Batch insert measurements",
                "parameters": [
                    {
                        "description": "Batch measurements request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BatchDataRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Batch insert successful",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/measurements/historical": {
            "get": {
                "description": "Retrieve historical measurements for specified sensors and measurement types with time range filtering using query parameters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "measurements"
                ],
                "summary": "Get historical measurements (query params)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comma-separated list of sensor names",
                        "name": "sensor_names",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of measurement type names",
                        "name": "type_names",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start time in RFC3339 format",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time in RFC3339 format",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum number of results",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Historical measurements data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Retrieve historical measurements for specified sensors and measurement types with time range filtering using JSON request body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "measurements"
                ],
                "summary": "Get historical measurements (JSON body)",
                "parameters": [
                    {
                        "description": "Historical measurements request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.HistoricalMeasurementsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Historical measurements data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/measurements/latest": {
            "get": {
                "description": "Retrieve the latest measurements for specified sensors and measurement types using query parameters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "measurements"
                ],
                "summary": "Get latest measurements (query params)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comma-separated list of sensor names",
                        "name": "sensor_names",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of measurement type names",
                        "name": "type_names",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Latest measurements data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Retrieve the latest measurements for specified sensors and measurement types using JSON request body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "measurements"
                ],
                "summary": "Get latest measurements (JSON body)",
                "parameters": [
                    {
                        "description": "Latest measurements request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LatestMeasurementsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Latest measurements data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/sensors": {
            "post": {
                "description": "Find sensors that satisfy conditions over their timeseries measurements",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sensors"
                ],
                "summary": "Discover sensors by measurement conditions",
                "parameters": [
                    {
                        "description": "Sensor discovery criteria",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/filter.SensorDiscoveryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Discovered sensors",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/sensors/discover": {
            "get": {
                "description": "Find sensors using query parameters for backward compatibility",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sensors"
                ],
                "summary": "Discover sensors (legacy query params)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Required types (comma-separated)",
                        "name": "type_names",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Optional types (comma-separated)",
                        "name": "optional_types",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Dataset IDs (comma-separated)",
                        "name": "dataset_ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value filter expression (type.operator.value)",
                        "name": "value_filter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start time (RFC3339)",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time (RFC3339)",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Only consider latest measurements",
                        "name": "latest_only",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum results",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Discovered sensors",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/sensors/verify": {
            "post": {
                "description": "Verify if a list of sensor names satisfy the same filters used in sensor discovery",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sensors"
                ],
                "summary": "Verify sensors against discovery filters",
                "parameters": [
                    {
                        "description": "Sensor verification request with filters and sensor names",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/filter.SensorVerifyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Verification results with ok status and verified/unverified lists",
                        "schema": {
                            "$ref": "#/definitions/filter.SensorVerifyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "filter.MeasurementFilter": {
            "type": "object",
            "properties": {
                "expression": {
                    "description": "Filter expression using legacy syntax (e.g., \"or(o2.eq.2, and(temp.gteq.20, temp.lteq.30))\")",
                    "type": "string"
                },
                "latest_only": {
                    "description": "Only consider latest measurements for each timeseries",
                    "type": "boolean"
                },
                "time_range": {
                    "description": "Time constraints for measurements",
                    "allOf": [
                        {
                            "$ref": "#/definitions/filter.TimeRange"
                        }
                    ]
                }
            }
        },
        "filter.SensorDiscoveryRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "description": "Result options",
                    "type": "integer"
                },
                "measurement_filter": {
                    "description": "Filter sensors by their measurement values",
                    "allOf": [
                        {
                            "$ref": "#/definitions/filter.MeasurementFilter"
                        }
                    ]
                },
                "timeseries_filter": {
                    "description": "Filter sensors by the timeseries types they \"own\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/filter.TimeseriesFilter"
                        }
                    ]
                }
            }
        },
        "filter.SensorVerifyRequest": {
            "type": "object",
            "properties": {
                "measurement_filter": {
                    "description": "Filter sensors by their measurement values",
                    "allOf": [
                        {
                            "$ref": "#/definitions/filter.MeasurementFilter"
                        }
                    ]
                },
                "sensor_names": {
                    "description": "List of sensor names to verify against the filters",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timeseries_filter": {
                    "description": "Filter sensors by the timeseries types they \"own\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/filter.TimeseriesFilter"
                        }
                    ]
                }
            }
        },
        "filter.SensorVerifyResponse": {
            "type": "object",
            "properties": {
                "ok": {
                    "description": "Whether all sensors satisfy the filters",
                    "type": "boolean"
                },
                "request": {
                    "description": "Original request for reference",
                    "allOf": [
                        {
                            "$ref": "#/definitions/filter.SensorVerifyRequest"
                        }
                    ]
                },
                "unverified": {
                    "description": "List of sensor names that do not satisfy the filters",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "verified": {
                    "description": "List of sensor names that satisfy the filters",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "filter.TimeRange": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "filter.TimeseriesFilter": {
            "type": "object",
            "properties": {
                "dataset_ids": {
                    "description": "Dataset membership filter",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "optional_types": {
                    "description": "Optional timeseries types - sensors may have ANY of these types",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "required_types": {
                    "description": "Required timeseries types - sensors must have ALL of these types",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.AddTypesToDatasetRequest": {
            "type": "object",
            "properties": {
                "is_required": {
                    "type": "boolean"
                },
                "type_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.BatchDataRequest": {
            "type": "object",
            "properties": {
                "measurements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MeasurementWithMeta"
                    }
                },
                "provenance": {
                    "$ref": "#/definitions/models.Provenance"
                }
            }
        },
        "models.CreateDatasetRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.DataType": {
            "type": "string",
            "enum": [
                "numeric",
                "string",
                "json",
                "geoposition",
                "geoshape",
                "boolean"
            ],
            "x-enum-varnames": [
                "DataTypeNumeric",
                "DataTypeString",
                "DataTypeJSON",
                "DataTypeGeoposition",
                "DataTypeGeoshape",
                "DataTypeBoolean"
            ]
        },
        "models.Dataset": {
            "type": "object",
            "properties": {
                "created_on": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.DatasetResponse": {
            "type": "object",
            "properties": {
                "dataset": {
                    "$ref": "#/definitions/models.Dataset"
                },
                "types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TypeInDataset"
                    }
                }
            }
        },
        "models.DeleteMeasurementsRequest": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "sensor_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "start_time": {
                    "type": "string"
                },
                "type_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.HistoricalMeasurementsRequest": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "sensor_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "start_time": {
                    "type": "string"
                },
                "type_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.LatestMeasurementsRequest": {
            "type": "object",
            "properties": {
                "sensor_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.MeasurementWithMeta": {
            "type": "object",
            "properties": {
                "sensor_name": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "type_name": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "models.Provenance": {
            "type": "object",
            "properties": {
                "data_collector": {
                    "type": "string"
                },
                "data_collector_version": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lineage": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "models.Type": {
            "type": "object",
            "properties": {
                "data_type": {
                    "$ref": "#/definitions/models.DataType"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "metadata": {
                    "type": "string",
                    "example": "{\"category\":\"environmental\"}"
                },
                "name": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "models.TypeInDataset": {
            "type": "object",
            "properties": {
                "is_required": {
                    "type": "boolean"
                },
                "type": {
                    "$ref": "#/definitions/models.Type"
                }
            }
        }
    }
}